/**
 *  Copyright (c) 2005-2010, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 *  WSO2 Inc. licenses this file to you under the Apache License,
 *  Version 2.0 (the "License"); you may not use this file except
 *  in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

package org.wso2.carbon.connector.integration.test.vimeo;

import org.apache.axis2.context.ConfigurationContext;
import org.json.JSONObject;
import org.testng.Assert;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;
import org.wso2.carbon.automation.api.clients.proxy.admin.ProxyServiceAdminClient;
import org.wso2.carbon.automation.api.clients.utils.AuthenticateStub;
import org.wso2.carbon.automation.utils.axis2client.ConfigurationContextProvider;
import org.wso2.carbon.connector.integration.test.common.ConnectorIntegrationUtil;
import org.wso2.carbon.esb.ESBIntegrationTest;
import org.wso2.carbon.mediation.library.stub.MediationLibraryAdminServiceStub;
import org.wso2.carbon.mediation.library.stub.upload.MediationLibraryUploaderStub;

import javax.activation.DataHandler;
import java.net.URL;
import java.util.Properties;

public class VimeoConnectorIntegrationTestGroups extends ESBIntegrationTest {

    private static final String CONNECTOR_NAME = "vimeo";

    private MediationLibraryUploaderStub mediationLibUploadStub = null;

    private MediationLibraryAdminServiceStub adminServiceStub = null;

    private ProxyServiceAdminClient proxyAdmin;

    private String repoLocation = null;

    private String vimeoConnectorFileName = CONNECTOR_NAME + ".zip";

    private Properties vimeoConnectorProperties = null;

    private String pathToProxiesDirectory = null;

    private String pathToRequestsDirectory = null;

    private String myGroupId = null;

    @BeforeClass(alwaysRun = true)
    public void setEnvironment() throws Exception {

        super.init();

        ConfigurationContextProvider configurationContextProvider = ConfigurationContextProvider.getInstance();
        ConfigurationContext cc = configurationContextProvider.getConfigurationContext();
        mediationLibUploadStub = new MediationLibraryUploaderStub(cc, esbServer.getBackEndUrl() + "MediationLibraryUploader");
        AuthenticateStub.authenticateStub("admin", "admin", mediationLibUploadStub);
        adminServiceStub = new MediationLibraryAdminServiceStub(cc, esbServer.getBackEndUrl() + "MediationLibraryAdminService");

        AuthenticateStub.authenticateStub("admin", "admin", adminServiceStub);

        if (System.getProperty("os.name").toLowerCase().contains("windows")) {
            repoLocation = System.getProperty("connector_repo").replace("/", "\\");
        } else {
            repoLocation = System.getProperty("connector_repo").replace("/", "/");
        }
        proxyAdmin = new ProxyServiceAdminClient(esbServer.getBackEndUrl(), esbServer.getSessionCookie());
        /*
        ConnectorIntegrationUtil.uploadConnector(repoLocation, mediationLibUploadStub, vimeoConnectorFileName);
        log.info("Sleeping for " + 30000 / 1000 + " seconds while waiting for synapse import");
        Thread.sleep(30000);

        adminServiceStub.updateStatus("{org.wso2.carbon.connector}" + CONNECTOR_NAME, CONNECTOR_NAME,
                "org.wso2.carbon.connector", "enabled");
        */

        vimeoConnectorProperties = ConnectorIntegrationUtil.getConnectorConfigProperties(CONNECTOR_NAME);

        pathToProxiesDirectory = repoLocation + vimeoConnectorProperties.getProperty("proxyDirectoryRelativePath");
        pathToRequestsDirectory = repoLocation + vimeoConnectorProperties.getProperty("requestDirectoryRelativePath");

    }

    @Override
    protected void cleanup() {
        axis2Client.destroy();
    }

//------------------------------------------------------------------------Groups-------------------------------------------------------------------------------------

/*
     @Test(groups = { "wso2.esb" },priority = 0, description = "vimeo{createGroup} integration test negative parameters.")
    public void testCreateGroupWithMandatoryParameters() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "groups/esb_createGroup.txt";
        String methodName = "vimeo_createGroup";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"groups/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty			      		("groupName"),vimeoConnectorProperties.getProperty("groupDescription"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
	    JSONObject jsonObject = ConnectorIntegrationUtil.sendRequest(getProxyServiceURL(methodName), modifiedJsonString);
	    Assert.assertEquals(vimeoConnectorProperties.getProperty("groupName"),jsonObject.getString("name"));
	     myGroupId=jsonObject.getString("uri").substring(8);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
	}


@Test(groups = { "wso2.esb" },priority = 1, description = "vimeo{createGroup} integration test with negative parameters.")
    public void testCreateGroupWithMandatoryParametersNegativeCase() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "groups/esb_createGroup.txt";
        String methodName = "vimeo_createGroup";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"groups/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("invalidName"),vimeoConnectorProperties.getProperty("description"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
	    JSONObject jsonObject = ConnectorIntegrationUtil.sendRequest(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 403);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
	}





   @Test(groups = { "wso2.esb" },priority =3, description = "vimeo{addVideoToGroup} integration test.")
    public void testaddVideoToGroupWithMandatoryParameters() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "groups/esb_addVideoToGroup.txt";
        String methodName = "vimeo_addVideoToGroup";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"groups/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),myGroupId,vimeoConnectorProperties.getProperty("video_id"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 204);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }

      @Test(groups = { "wso2.esb" },priority =2, description = "vimeo{addVideoToGroup} integration test with negative parameters.")
    public void testaddVideoToGroupWithMandatoryParametersNegativeCaseGroupId() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "groups/esb_addVideoToGroup.txt";
        String methodName = "vimeo_addVideoToGroup";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory +"groups/"+ methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("group_id"),vimeoConnectorProperties.getProperty("video_id"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 403);
	
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }


@Test(groups = { "wso2.esb" },priority =5, description = "vimeo{removeVideoFromGroup} integration test.")
    public void testRemoveVideoFromGroupWithMandatoryParameters() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "groups/esb_removeVideoFromGroup.txt";
        String methodName = "vimeo_removeVideoFromGroup";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"groups/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),myGroupId,vimeoConnectorProperties.getProperty("video_id"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 403);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }
@Test(groups = { "wso2.esb" },priority =7, description = "vimeo{removeVideoFromGroup} integration test negative parameters.")
    public void testRemoveVideoFromGroupWithMandatoryParametersNegativeCaseGroupId() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "groups/esb_removeVideoFromGroup.txt";
        String methodName = "vimeo_removeVideoFromGroup";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"groups/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("group_id"),vimeoConnectorProperties.getProperty("video_id"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 403);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }
	

	@Test(groups = { "wso2.esb" }, description = "vimeo{deleteGroup} integration test.")
    public void testDeleteGroupWithMandatoryParameters() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "groups/esb_deleteGroup.txt";
        String methodName = "vimeo_deleteGroup";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"groups/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("group_id"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 403);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }


@Test(groups = { "wso2.esb" }, description = "vimeo{deleteGroup} integration test with negative parameters.")
    public void testDeleteGroupWithMandatoryParametersNegativeCase() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "groups/esb_deleteGroup.txt";
        String methodName = "vimeo_deleteGroup";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"groups/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("invalidGroup_id"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
	    JSONObject jsonObject = ConnectorIntegrationUtil.sendRequest(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 404);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
	}
*/


    @Test(groups = {"wso2.esb"}, description = "vimeo{getGroups} integration test.")
    public void testGetGroupsWithMandatoryParameters() throws Exception {

        String jsonRequestFilePath = pathToRequestsDirectory + "groups/esb_getGroupsMandatory.txt";
        String methodName = "vimeo_getGroups";

        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory + "groups/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"));

        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));

        try {

            JSONObject jsonObject = ConnectorIntegrationUtil.sendRequest(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(jsonObject.has("total"));
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }


    @Test(groups = {"wso2.esb"}, description = "vimeo{getGroups} integration test.")
    public void testGetGroupsWithOptionalParameters() throws Exception {

        String jsonRequestFilePath = pathToRequestsDirectory + "groups/esb_getGroupsOptional.txt";
        String methodName = "vimeo_getGroups";

        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory + "groups/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"), vimeoConnectorProperties.getProperty("page"), vimeoConnectorProperties.getProperty("per_page"), vimeoConnectorProperties.getProperty("query"), vimeoConnectorProperties.getProperty("groupSort"), vimeoConnectorProperties.getProperty("direction"), vimeoConnectorProperties.getProperty("filter"));

        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));

        try {
            JSONObject jsonObject = ConnectorIntegrationUtil.sendRequest(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertEquals(vimeoConnectorProperties.getProperty("page"), jsonObject.getString("page"));
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }

    @Test(groups = {"wso2.esb"}, description = "vimeo{getGroups} integration test.")
    public void testGetGroupsWithPageOptionalParameter() throws Exception {

        String jsonRequestFilePath = pathToRequestsDirectory + "groups/esb_getGroupsOptionalPage.txt";
        String methodName = "vimeo_getGroups";

        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory + "groups/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"), vimeoConnectorProperties.getProperty("page"));

        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));

        try {
            JSONObject jsonObject = ConnectorIntegrationUtil.sendRequest(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertEquals(vimeoConnectorProperties.getProperty("page"), jsonObject.getString("page"));
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }


    @Test(groups = {"wso2.esb"}, description = "vimeo{getGroups} integration test with negative parameters.")
    public void testGetGroupsWithPageOptionalParameterNegativeCase() throws Exception {

        String jsonRequestFilePath = pathToRequestsDirectory + "groups/esb_getGroupsOptionalPage.txt";
        String methodName = "vimeo_getGroups";

        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory + "groups/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"), vimeoConnectorProperties.getProperty("invalidPage"));

        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));

        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 400);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }


    @Test(groups = {"wso2.esb"}, description = "vimeo{getGroups} integration test.")
    public void testGetGroupsWithPerPageOptionalParameter() throws Exception {

        String jsonRequestFilePath = pathToRequestsDirectory + "groups/esb_getGroupsOptionalPerPage.txt";
        String methodName = "vimeo_getGroups";

        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory + "groups/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"), vimeoConnectorProperties.getProperty("per_page"));

        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));

        try {
            JSONObject jsonObject = ConnectorIntegrationUtil.sendRequest(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertEquals(vimeoConnectorProperties.getProperty("per_page"), jsonObject.getString("per_page"));
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }


    @Test(groups = {"wso2.esb"}, description = "vimeo{getGroups} integration test with negative parameters.")
    public void testGetGroupsWithPerPageOptionalParameterNegativeCase() throws Exception {

        String jsonRequestFilePath = pathToRequestsDirectory + "groups/esb_getGroupsOptionalPerPage.txt";
        String methodName = "vimeo_getGroups";

        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory + "groups/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"), vimeoConnectorProperties.getProperty("invalidPer_page"));

        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));

        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 500);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }


    @Test(groups = {"wso2.esb"}, description = "vimeo{getGroups} integration test.")
    public void testGetGroupsWithQueryOptionalParameter() throws Exception {

        String jsonRequestFilePath = pathToRequestsDirectory + "groups/esb_getGroupsOptionalQuery.txt";
        String methodName = "vimeo_getGroups";

        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory + "groups/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"), vimeoConnectorProperties.getProperty("query"));

        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));

        try {
            JSONObject jsonObject = ConnectorIntegrationUtil.sendRequest(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(jsonObject.has("total"));
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }


    @Test(groups = {"wso2.esb"}, description = "vimeo{getGroups} integration test with negative parameters.")
    public void testGetGroupsWithQueryOptionalParameterNegativeCase() throws Exception {

        String jsonRequestFilePath = pathToRequestsDirectory + "groups/esb_getGroupsOptionalQuery.txt";
        String methodName = "vimeo_getGroups";

        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory + "groups/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"), vimeoConnectorProperties.getProperty("invalidQuery"));

        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));

        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 200);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }

    @Test(groups = {"wso2.esb"}, description = "vimeo{getGroups} integration test.")
    public void testGetGroupsWithSortOptionalParameter() throws Exception {

        String jsonRequestFilePath = pathToRequestsDirectory + "groups/esb_getGroupsOptionalSort.txt";
        String methodName = "vimeo_getGroups";

        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory + "groups/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"), vimeoConnectorProperties.getProperty("groupSort"));

        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));

        try {
            JSONObject jsonObject = ConnectorIntegrationUtil.sendRequest(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(jsonObject.has("total"));
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }


    @Test(groups = {"wso2.esb"}, description = "vimeo{getGroups} integration test with negative parameters.")
    public void testGetGroupsWithSortOptionalParameterNegativeCase() throws Exception {

        String jsonRequestFilePath = pathToRequestsDirectory + "groups/esb_getGroupsOptionalSort.txt";
        String methodName = "vimeo_getGroups";

        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory + "groups/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"), vimeoConnectorProperties.getProperty("invalidSort"));

        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));

        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 400);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }

    @Test(groups = {"wso2.esb"}, description = "vimeo{getGroups} integration test.")
    public void testGetGroupsWithDirectionOptionalParameter() throws Exception {

        String jsonRequestFilePath = pathToRequestsDirectory + "groups/esb_getGroupsOptionalDirection.txt";
        String methodName = "vimeo_getGroups";

        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory + "groups/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"), vimeoConnectorProperties.getProperty("direction"));

        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));

        try {
            JSONObject jsonObject = ConnectorIntegrationUtil.sendRequest(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(jsonObject.has("total"));
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }


    @Test(groups = {"wso2.esb"}, description = "vimeo{getGroups} integration test with negative parameters.")
    public void testGetGroupsWithDirectionOptionalParameterNegativeCase() throws Exception {

        String jsonRequestFilePath = pathToRequestsDirectory + "groups/esb_getGroupsOptionalDirection.txt";
        String methodName = "vimeo_getGroups";

        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory + "groups/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"), vimeoConnectorProperties.getProperty("invalidDirection"));

        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));

        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 400);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }

    @Test(groups = {"wso2.esb"}, description = "vimeo{getGroups} integration test.")
    public void testgetGroupsWithFilterOptionalParameter() throws Exception {

        String jsonRequestFilePath = pathToRequestsDirectory + "groups/esb_getGroupsOptionalFilter.txt";
        String methodName = "vimeo_getGroups";

        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory + "groups/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"), vimeoConnectorProperties.getProperty("filter"));

        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));

        try {
            JSONObject jsonObject = ConnectorIntegrationUtil.sendRequest(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(jsonObject.has("total"));
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }


    @Test(groups = {"wso2.esb"}, description = "vimeo{getGroups} integration test with negative parameters.")
    public void testgetGroupsWithFilterOptionalParameterNegativeCase() throws Exception {

        String jsonRequestFilePath = pathToRequestsDirectory + "groups/esb_getGroupsOptionalFilter.txt";
        String methodName = "vimeo_getGroups";

        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory + "groups/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"), vimeoConnectorProperties.getProperty("invalidFilter"));

        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));

        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 200);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }


    @Test(groups = {"wso2.esb"}, description = "vimeo{getGroup} integration test.")
    public void testGetGroupWithMandatoryParameters() throws Exception {

        String jsonRequestFilePath = pathToRequestsDirectory + "groups/esb_getGroup.txt";
        String methodName = "vimeo_getGroup";

        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory + "groups/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"), vimeoConnectorProperties.getProperty("group_id"));

        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));

        try {
            JSONObject jsonObject = ConnectorIntegrationUtil.sendRequest(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(jsonObject.has("name"));
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }

    @Test(groups = {"wso2.esb"}, description = "vimeo{getGroup} integration test.")
    public void testGetGroupWithMandatoryParametersNegativeCase() throws Exception {

        String jsonRequestFilePath = pathToRequestsDirectory + "groups/esb_getGroup.txt";
        String methodName = "vimeo_getGroup";

        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory + "groups/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"), vimeoConnectorProperties.getProperty("invalidGroup_id"));

        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));

        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 404);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }


    @Test(groups = {"wso2.esb"}, description = "vimeo{getUsersJoinedToGroup} integration test.")
    public void testGetUsersJoinedToGroupWithMandatoryParameters() throws Exception {

        String jsonRequestFilePath = pathToRequestsDirectory + "groups/esb_getUsersJoinedToGroupMandatory.txt";
        String methodName = "vimeo_getUsersJoinedToGroup";

        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory + "groups/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"), vimeoConnectorProperties.getProperty("group_id"));

        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));

        try {
            JSONObject jsonObject = ConnectorIntegrationUtil.sendRequest(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(jsonObject.has("total"));
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }


    @Test(groups = {"wso2.esb"}, description = "vimeo{getUsersJoinedToGroup} integration test.")
    public void testGetUsersJoinedToGroupWithOptionalParameters() throws Exception {

        String jsonRequestFilePath = pathToRequestsDirectory + "groups/esb_getUsersJoinedToGroupOptional.txt";
        String methodName = "vimeo_getUsersJoinedToGroup";

        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory + "groups/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"), vimeoConnectorProperties.getProperty("group_id"), vimeoConnectorProperties.getProperty("page"), vimeoConnectorProperties.getProperty("per_page"), vimeoConnectorProperties.getProperty("query"), vimeoConnectorProperties.getProperty("groupSort"), vimeoConnectorProperties.getProperty("direction"), vimeoConnectorProperties.getProperty("filter"));

        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));

        try {
            JSONObject jsonObject = ConnectorIntegrationUtil.sendRequest(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(jsonObject.has("total"));
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }

    @Test(groups = {"wso2.esb"}, description = "vimeo{getUsersJoinedToGroup} integration test.")
    public void testGetUsersJoinedToGroupWithPageOptionalParameter() throws Exception {

        String jsonRequestFilePath = pathToRequestsDirectory + "groups/esb_getUsersJoinedToGroupOptionalPage.txt";
        String methodName = "vimeo_getUsersJoinedToGroup";

        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory + "groups/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"), vimeoConnectorProperties.getProperty("group_id"), vimeoConnectorProperties.getProperty("page"));

        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));

        try {
            JSONObject jsonObject = ConnectorIntegrationUtil.sendRequest(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertEquals(vimeoConnectorProperties.getProperty("page"), jsonObject.getString("page"));
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }


    @Test(groups = {"wso2.esb"}, description = "vimeo{getUsersJoinedToGroup} integration test with negative parameters.")
    public void testGetUsersJoinedToGroupWithPageOptionalParameterNegativeCase() throws Exception {

        String jsonRequestFilePath = pathToRequestsDirectory + "groups/esb_getUsersJoinedToGroupOptionalPage.txt";
        String methodName = "vimeo_getUsersJoinedToGroup";

        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory + "groups/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"), vimeoConnectorProperties.getProperty("group_id"), vimeoConnectorProperties.getProperty("invalidPage"));

        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));

        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 400);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }


    @Test(groups = {"wso2.esb"}, description = "vimeo{getUsersJoinedToGroup} integration test.")
    public void testGetUsersJoinedToGroupWithPerPageOptionalParameter() throws Exception {

        String jsonRequestFilePath = pathToRequestsDirectory + "groups/esb_getUsersJoinedToGroupOptionalPerPage.txt";
        String methodName = "vimeo_getUsersJoinedToGroup";

        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory + "groups/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"), vimeoConnectorProperties.getProperty("group_id"), vimeoConnectorProperties.getProperty("per_page"));

        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));

        try {
            JSONObject jsonObject = ConnectorIntegrationUtil.sendRequest(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertEquals(vimeoConnectorProperties.getProperty("per_page"), jsonObject.getString("per_page"));
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }


    @Test(groups = {"wso2.esb"}, description = "vimeo{getUsersJoinedToGroup} integration test with negative parameters.")
    public void testGetUsersJoinedToGroupWithPerPageOptionalParameterNegativeCase() throws Exception {

        String jsonRequestFilePath = pathToRequestsDirectory + "groups/esb_getUsersJoinedToGroupOptionalPerPage.txt";
        String methodName = "vimeo_getUsersJoinedToGroup";

        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory + "groups/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"), vimeoConnectorProperties.getProperty("group_id"), vimeoConnectorProperties.getProperty("invalidPer_page"));

        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));

        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 500);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }


    @Test(groups = {"wso2.esb"}, description = "vimeo{getUsersJoinedToGroup} integration test.")
    public void testGetUsersJoinedToGroupWithQueryOptionalParameter() throws Exception {

        String jsonRequestFilePath = pathToRequestsDirectory + "groups/esb_getUsersJoinedToGroupOptionalQuery.txt";
        String methodName = "vimeo_getUsersJoinedToGroup";

        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory + "groups/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"), vimeoConnectorProperties.getProperty("group_id"), vimeoConnectorProperties.getProperty("query"));

        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));

        try {
            JSONObject jsonObject = ConnectorIntegrationUtil.sendRequest(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(jsonObject.has("total"));
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }


    @Test(groups = {"wso2.esb"}, description = "vimeo{getUsersJoinedToGroup} integration test with negative parameters.")
    public void testGetUsersJoinedToGroupWithQueryOptionalParameterNegativeCase() throws Exception {

        String jsonRequestFilePath = pathToRequestsDirectory + "groups/esb_getUsersJoinedToGroupOptionalQuery.txt";
        String methodName = "vimeo_getUsersJoinedToGroup";

        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory + "groups/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"), vimeoConnectorProperties.getProperty("group_id"), vimeoConnectorProperties.getProperty("invalidQuery"));

        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));

        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 200);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }

    @Test(groups = {"wso2.esb"}, description = "vimeo{getUsersJoinedToGroup} integration test.")
    public void testGetUsersJoinedToGroupWithSortOptionalParameter() throws Exception {

        String jsonRequestFilePath = pathToRequestsDirectory + "groups/esb_getUsersJoinedToGroupOptionalSort.txt";
        String methodName = "vimeo_getUsersJoinedToGroup";

        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory + "groups/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"), vimeoConnectorProperties.getProperty("group_id"), vimeoConnectorProperties.getProperty("groupSort"));

        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));

        try {
            JSONObject jsonObject = ConnectorIntegrationUtil.sendRequest(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(jsonObject.has("total"));
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }


    @Test(groups = {"wso2.esb"}, description = "vimeo{getUsersJoinedToGroup} integration test with negative parameters.")
    public void testGetUsersJoinedToGroupWithSortOptionalParameterNegativeCase() throws Exception {

        String jsonRequestFilePath = pathToRequestsDirectory + "groups/esb_getUsersJoinedToGroupOptionalSort.txt";
        String methodName = "vimeo_getUsersJoinedToGroup";

        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory + "groups/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"), vimeoConnectorProperties.getProperty("group_id"), vimeoConnectorProperties.getProperty("invalidSort"));

        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));

        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 400);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }


    @Test(groups = {"wso2.esb"}, description = "vimeo{getUsersJoinedToGroup} integration test.")
    public void testGetUsersJoinedToGroupWithDirectionOptionalParameter() throws Exception {

        String jsonRequestFilePath = pathToRequestsDirectory + "groups/esb_getUsersJoinedToGroupOptionalDirection.txt";
        String methodName = "vimeo_getUsersJoinedToGroup";

        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory + "groups/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"), vimeoConnectorProperties.getProperty("group_id"), vimeoConnectorProperties.getProperty("direction"));

        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));

        try {
            JSONObject jsonObject = ConnectorIntegrationUtil.sendRequest(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(jsonObject.has("total"));
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }


    @Test(groups = {"wso2.esb"}, description = "vimeo{getUsersJoinedToGroup} integration test with negative parameters.")
    public void testGetUsersJoinedToGroupWithDirectionOptionalParameterNegativeCase() throws Exception {

        String jsonRequestFilePath = pathToRequestsDirectory + "groups/esb_getUsersJoinedToGroupOptionalDirection.txt";
        String methodName = "vimeo_getUsersJoinedToGroup";

        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory + "groups/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"), vimeoConnectorProperties.getProperty("group_id"), vimeoConnectorProperties.getProperty("invalidDirection"));

        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));

        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 400);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }

    @Test(groups = {"wso2.esb"}, description = "vimeo{getUsersJoinedToGroup} integration test.")
    public void testGetUsersJoinedToGroupWithFilterOptionalParameter() throws Exception {

        String jsonRequestFilePath = pathToRequestsDirectory + "groups/esb_getUsersJoinedToGroupOptionalFilter.txt";
        String methodName = "vimeo_getUsersJoinedToGroup";

        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory + "groups/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"), vimeoConnectorProperties.getProperty("group_id"), vimeoConnectorProperties.getProperty("groupUserFilter"));

        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));

        try {
            JSONObject jsonObject = ConnectorIntegrationUtil.sendRequest(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(jsonObject.has("total"));
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }

    @Test(groups = {"wso2.esb"}, description = "vimeo{getUsersJoinedToGroup} integration test with negative parameters.")
    public void testGetUsersJoinedToGroupWithFilterOptionalParameterNegativeCase() throws Exception {

        String jsonRequestFilePath = pathToRequestsDirectory + "groups/esb_getUsersJoinedToGroupOptionalFilter.txt";
        String methodName = "vimeo_getUsersJoinedToGroup";

        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory + "groups/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"), vimeoConnectorProperties.getProperty("group_id"), vimeoConnectorProperties.getProperty("invalidFilter"));

        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));

        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 200);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }


    @Test(groups = {"wso2.esb"}, description = "vimeo{getVideosInGroup} integration test.")
    public void testGetVideosInGroupWithMandatoryParameters() throws Exception {

        String jsonRequestFilePath = pathToRequestsDirectory + "groups/esb_getVideosInGroupMandatory.txt";
        String methodName = "vimeo_getVideosInGroup";

        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory + "groups/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"), vimeoConnectorProperties.getProperty("group_id"));

        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));

        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 200);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }

    @Test(groups = {"wso2.esb"}, description = "vimeo{getVideosInGroup} integration test.")
    public void testGetVideosInGroupWithOptionalParameters() throws Exception {

        String jsonRequestFilePath = pathToRequestsDirectory + "groups/esb_getVideosInGroupOptional.txt";
        String methodName = "vimeo_getVideosInGroup";

        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory + "groups/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"), vimeoConnectorProperties.getProperty("group_id"), vimeoConnectorProperties.getProperty("page"), vimeoConnectorProperties.getProperty("per_page"), vimeoConnectorProperties.getProperty("query"), vimeoConnectorProperties.getProperty("groupSort"), vimeoConnectorProperties.getProperty("direction"), vimeoConnectorProperties.getProperty("filter"), vimeoConnectorProperties.getProperty("filter_embeddable"));

        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));

        try {
            JSONObject jsonObject = ConnectorIntegrationUtil.sendRequest(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(jsonObject.has("total"));
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }

    @Test(groups = {"wso2.esb"}, description = "vimeo{getVideosInGroup} integration test.")
    public void testGetVideosInGroupWithPageOptionalParameter() throws Exception {

        String jsonRequestFilePath = pathToRequestsDirectory + "groups/esb_getVideosInGroupOptionalPage.txt";
        String methodName = "vimeo_getVideosInGroup";

        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory + "groups/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"), vimeoConnectorProperties.getProperty("group_id"), vimeoConnectorProperties.getProperty("page"));

        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));

        try {
            JSONObject jsonObject = ConnectorIntegrationUtil.sendRequest(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertEquals(vimeoConnectorProperties.getProperty("page"), jsonObject.getString("page"));
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }


    @Test(groups = {"wso2.esb"}, description = "vimeo{getVideosInGroup} integration test with negative parameters.")
    public void testGetVideosInGroupWithPageOptionalParameterNegativeCase() throws Exception {

        String jsonRequestFilePath = pathToRequestsDirectory + "groups/esb_getVideosInGroupOptionalPage.txt";
        String methodName = "vimeo_getVideosInGroup";

        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory + "groups/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"), vimeoConnectorProperties.getProperty("group_id"), vimeoConnectorProperties.getProperty("invalidPage"));

        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));

        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 400);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }


    @Test(groups = {"wso2.esb"}, description = "vimeo{getVideosInGroup} integration test.")
    public void testGetVideosInGroupWithPerPageOptionalParameter() throws Exception {

        String jsonRequestFilePath = pathToRequestsDirectory + "groups/esb_getVideosInGroupOptionalPerPage.txt";
        String methodName = "vimeo_getVideosInGroup";

        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory + "groups/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"), vimeoConnectorProperties.getProperty("group_id"), vimeoConnectorProperties.getProperty("per_page"));

        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));

        try {
            JSONObject jsonObject = ConnectorIntegrationUtil.sendRequest(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertEquals(vimeoConnectorProperties.getProperty("per_page"), jsonObject.getString("per_page"));
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }


    @Test(groups = {"wso2.esb"}, description = "vimeo{getVideosInGroup} integration test with negative parameters.")
    public void testGetVideosInGroupWithPerPageOptionalParameterNegativeCase() throws Exception {

        String jsonRequestFilePath = pathToRequestsDirectory + "groups/esb_getVideosInGroupOptionalPerPage.txt";
        String methodName = "vimeo_getVideosInGroup";

        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory + "groups/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"), vimeoConnectorProperties.getProperty("group_id"), vimeoConnectorProperties.getProperty("invalidPer_page"));

        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));

        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 500);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }


    @Test(groups = {"wso2.esb"}, description = "vimeo{getVideosInGroup} integration test.")
    public void testGetVideosInGroupWithQueryOptionalParameter() throws Exception {

        String jsonRequestFilePath = pathToRequestsDirectory + "groups/esb_getVideosInGroupOptionalQuery.txt";
        String methodName = "vimeo_getVideosInGroup";

        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory + "groups/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"), vimeoConnectorProperties.getProperty("group_id"), vimeoConnectorProperties.getProperty("query"));

        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));

        try {
            JSONObject jsonObject = ConnectorIntegrationUtil.sendRequest(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(jsonObject.has("total"));
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }


    @Test(groups = {"wso2.esb"}, description = "vimeo{getVideosInGroup} integration test with negative parameters.")
    public void testGetVideosInGroupWithQueryOptionalParameterNegativeCase() throws Exception {

        String jsonRequestFilePath = pathToRequestsDirectory + "groups/esb_getVideosInGroupOptionalQuery.txt";
        String methodName = "vimeo_getVideosInGroup";

        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory + "groups/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"), vimeoConnectorProperties.getProperty("group_id"), vimeoConnectorProperties.getProperty("invalidQuery"));

        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));

        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 200);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }

    @Test(groups = {"wso2.esb"}, description = "vimeo{getVideosInGroup} integration test.")
    public void testGetVideosInGroupWithSortOptionalParameter() throws Exception {

        String jsonRequestFilePath = pathToRequestsDirectory + "groups/esb_getVideosInGroupOptionalSort.txt";
        String methodName = "vimeo_getVideosInGroup";

        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory + "groups/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"), vimeoConnectorProperties.getProperty("group_id"), vimeoConnectorProperties.getProperty("groupSort"));

        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));

        try {
            JSONObject jsonObject = ConnectorIntegrationUtil.sendRequest(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(jsonObject.has("total"));
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }


    @Test(groups = {"wso2.esb"}, description = "vimeo{getVideosInGroup} integration test with negative parameters.")
    public void testGetVideosInGroupWithSortOptionalParameterNegativeCase() throws Exception {

        String jsonRequestFilePath = pathToRequestsDirectory + "groups/esb_getVideosInGroupOptionalSort.txt";
        String methodName = "vimeo_getVideosInGroup";

        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory + "groups/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"), vimeoConnectorProperties.getProperty("group_id"), vimeoConnectorProperties.getProperty("invalidSort"));

        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));

        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 400);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }


    @Test(groups = {"wso2.esb"}, description = "vimeo{getVideosInGroup} integration test.")
    public void testGetVideosInGroupWithDirectionOptionalParameter() throws Exception {

        String jsonRequestFilePath = pathToRequestsDirectory + "groups/esb_getVideosInGroupOptionalDirection.txt";
        String methodName = "vimeo_getVideosInGroup";

        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory + "groups/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"), vimeoConnectorProperties.getProperty("group_id"), vimeoConnectorProperties.getProperty("direction"));

        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));

        try {
            JSONObject jsonObject = ConnectorIntegrationUtil.sendRequest(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(jsonObject.has("total"));
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }


    @Test(groups = {"wso2.esb"}, description = "vimeo{getVideosInGroup} integration test with negative parameters.")
    public void testGetVideosInGroupWithDirectionOptionalParameterNegativeCase() throws Exception {

        String jsonRequestFilePath = pathToRequestsDirectory + "groups/esb_getVideosInGroupOptionalDirection.txt";
        String methodName = "vimeo_getVideosInGroup";

        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory + "groups/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"), vimeoConnectorProperties.getProperty("group_id"), vimeoConnectorProperties.getProperty("invalidDirection"));

        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));

        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 400);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }

    @Test(groups = {"wso2.esb"}, description = "vimeo{getVideosInGroup} integration test.")
    public void testGetVideosInGroupWithFilterOptionalParameter() throws Exception {

        String jsonRequestFilePath = pathToRequestsDirectory + "groups/esb_getVideosInGroupOptionalFilter.txt";
        String methodName = "vimeo_getVideosInGroup";

        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory + "groups/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"), vimeoConnectorProperties.getProperty("group_id"), vimeoConnectorProperties.getProperty("groupUserFilter"));

        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));

        try {
            JSONObject jsonObject = ConnectorIntegrationUtil.sendRequest(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(jsonObject.has("total"));
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }

    @Test(groups = {"wso2.esb"}, description = "vimeo{getVideosInGroup} integration test with negative parameters.")
    public void testGetVideosInGroupWithFilterOptionalParameterNegativeCase() throws Exception {

        String jsonRequestFilePath = pathToRequestsDirectory + "groups/esb_getVideosInGroupOptionalFilter.txt";
        String methodName = "vimeo_getVideosInGroup";

        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory + "groups/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"), vimeoConnectorProperties.getProperty("group_id"), vimeoConnectorProperties.getProperty("invalidFilter"));

        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));

        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 200);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }

    @Test(groups = {"wso2.esb"}, description = "vimeo{getVideosInGroup} integration test.")
    public void testGetVideosInGroupWithFilterEmbeddableOptionalParameter() throws Exception {

        String jsonRequestFilePath = pathToRequestsDirectory + "groups/esb_getVideosInGroupOptionalFilterEmbeddable.txt";
        String methodName = "vimeo_getVideosInGroup";

        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory + "groups/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"), vimeoConnectorProperties.getProperty("group_id"), vimeoConnectorProperties.getProperty("groupUserFilter"));

        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));

        try {
            JSONObject jsonObject = ConnectorIntegrationUtil.sendRequest(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(jsonObject.has("total"));
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }

    @Test(groups = {"wso2.esb"}, description = "vimeo{getVideosInGroup} integration test with negative parameters.")
    public void testGetVideosInGroupWithFilterEmbeddableOptionalParameterNegativeCase() throws Exception {

        String jsonRequestFilePath = pathToRequestsDirectory + "groups/esb_getVideosInGroupOptionalFilterEmbeddable.txt";
        String methodName = "vimeo_getVideosInGroup";

        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory + "groups/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"), vimeoConnectorProperties.getProperty("group_id"), vimeoConnectorProperties.getProperty("invalidFilter"));

        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));

        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 200);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }
}
