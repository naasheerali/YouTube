/**
 *  Copyright (c) 2005-2010, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 *  WSO2 Inc. licenses this file to you under the Apache License,
 *  Version 2.0 (the "License"); you may not use this file except
 *  in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

package org.wso2.carbon.connector.integration.test.vimeo;

import org.apache.axis2.context.ConfigurationContext;
import org.testng.Assert;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;
import org.wso2.carbon.automation.api.clients.proxy.admin.ProxyServiceAdminClient;
import org.wso2.carbon.automation.api.clients.utils.AuthenticateStub;
import org.wso2.carbon.automation.utils.axis2client.ConfigurationContextProvider;
import org.wso2.carbon.connector.integration.test.common.ConnectorIntegrationUtil;
import org.wso2.carbon.esb.ESBIntegrationTest;
import org.wso2.carbon.mediation.library.stub.MediationLibraryAdminServiceStub;
import org.wso2.carbon.mediation.library.stub.upload.MediationLibraryUploaderStub;

import javax.activation.DataHandler;
import java.net.URL;
import java.util.Properties;

public class VimeoConnectorIntegrationTestVideos extends ESBIntegrationTest {

    private static final String CONNECTOR_NAME = "vimeo";

    private MediationLibraryUploaderStub mediationLibUploadStub = null;

    private MediationLibraryAdminServiceStub adminServiceStub = null;

    private ProxyServiceAdminClient proxyAdmin;

    private String repoLocation = null;

    private String vimeoConnectorFileName = CONNECTOR_NAME + ".zip";

    private Properties vimeoConnectorProperties = null;

    private String pathToProxiesDirectory = null;

    private String pathToRequestsDirectory = null;

    private String myGroupId = null;

    @BeforeClass(alwaysRun = true)
    public void setEnvironment() throws Exception {

        super.init();

        ConfigurationContextProvider configurationContextProvider = ConfigurationContextProvider.getInstance();
        ConfigurationContext cc = configurationContextProvider.getConfigurationContext();
        mediationLibUploadStub = new MediationLibraryUploaderStub(cc, esbServer.getBackEndUrl() + "MediationLibraryUploader");
        AuthenticateStub.authenticateStub("admin", "admin", mediationLibUploadStub);
        adminServiceStub = new MediationLibraryAdminServiceStub(cc, esbServer.getBackEndUrl() + "MediationLibraryAdminService");

        AuthenticateStub.authenticateStub("admin", "admin", adminServiceStub);

        if (System.getProperty("os.name").toLowerCase().contains("windows")) {
            repoLocation = System.getProperty("connector_repo").replace("/", "\\");
        } else {
            repoLocation = System.getProperty("connector_repo").replace("/", "/");
        }
        proxyAdmin = new ProxyServiceAdminClient(esbServer.getBackEndUrl(), esbServer.getSessionCookie());

        vimeoConnectorProperties = ConnectorIntegrationUtil.getConnectorConfigProperties(CONNECTOR_NAME);

        pathToProxiesDirectory = repoLocation + vimeoConnectorProperties.getProperty("proxyDirectoryRelativePath");
        pathToRequestsDirectory = repoLocation + vimeoConnectorProperties.getProperty("requestDirectoryRelativePath");

    }

    @Override
    protected void cleanup() {
        axis2Client.destroy();
    }

//-----------------------------------------------------Videos-------------------------------------------------------------------

/*

@Test(groups = { "wso2.esb" }, description = "vimeo{postComment} integration test.")
	 public void testPostCommentWithMandatoryParameters() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "videos/esb_postComment.txt";
        String methodName = "vimeo_postComment";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"videos/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("myVideo_id"),vimeoConnectorProperties.getProperty("text"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 201);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }

@Test(groups = { "wso2.esb" }, description = "vimeo{postComment} integration test.")
	 public void testPostCommentWithMandatoryParametersNegativeCase() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "videos/esb_postComment.txt";
        String methodName = "vimeo_postComment";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"videos/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("invalidVideo_id"),vimeoConnectorProperties.getProperty("text"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 404);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }


@Test(groups = { "wso2.esb" }, description = "vimeo{postReplyToComment} integration test.")
	 public void testPostReplyToCommentWithMandatoryParameters() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "videos/esb_postReplyToComment.txt";
        String methodName = "vimeo_postReplyToComment";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"videos/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("editVideo_id"),vimeoConnectorProperties.getProperty("editComment_id"),vimeoConnectorProperties.getProperty("replyText"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 201);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }

@Test(groups = { "wso2.esb" }, description = "vimeo{postReplyToComment} integration test.")
	 public void testPostReplyToCommentWithMandatoryParametersNegativeCase() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "videos/esb_postReplyToComment.txt";
        String methodName = "vimeo_postReplyToComment";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"videos/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("invalidVideo_id"),vimeoConnectorProperties.getProperty("editComment_id"),vimeoConnectorProperties.getProperty("replyText"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 404);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }
@Test(groups = { "wso2.esb" }, description = "vimeo{tagVideo} integration test.")
	 public void testTagVideoWithMandatoryParameters() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "videos/esb_tagVideo.txt";
        String methodName = "vimeo_tagVideo";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"videos/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("myVideo_id"),vimeoConnectorProperties.getProperty("tag"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 200);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }

@Test(groups = { "wso2.esb" }, description = "vimeo{tagVideo} integration test.")
	 public void testTagVideoWithMandatoryParametersNegativeCase() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "videos/esb_tagVideo.txt";
        String methodName = "vimeo_tagVideo";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"videos/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("invalidVideo_id"),vimeoConnectorProperties.getProperty("tag"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 404);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }

    }

@Test(groups = { "wso2.esb" }, description = "vimeo{removeTagFromVideo} integration test.")
	 public void testRemoveTagFromVideoWithMandatoryParameters() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "videos/esb_removeTagFromVideo.txt";
        String methodName = "vimeo_removeTagFromVideo";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"videos/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("myVideo_id"),vimeoConnectorProperties.getProperty("tag"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 204);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }

@Test(groups = { "wso2.esb" }, description = "vimeo{removeTagFromVideo} integration test.")
	 public void testRemoveTagFromVideoWithMandatoryParametersNegativeCase() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "videos/esb_removeTagFromVideo.txt";
        String methodName = "vimeo_removeTagFromVideo";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"videos/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("invalidVideo_id"),vimeoConnectorProperties.getProperty("tag"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 404);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }

    }

// url exception
/*
@Test(groups = { "wso2.esb" }, description = "vimeo{editComment} integration test.")
	 public void testEditCommentWithMandatoryParameters() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "videos/esb_editComment.txt";
        String methodName = "vimeo_editComment";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"videos/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("editVideo_id"),vimeoConnectorProperties.getProperty("editComment_id"),vimeoConnectorProperties.getProperty("editText"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 204);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }

@Test(groups = { "wso2.esb" }, description = "vimeo{editComment} integration test.")
	 public void testEditCommentWithMandatoryParametersNegativeCase() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "videos/esb_editComment.txt";
        String methodName = "vimeo_editComment";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"videos/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("invalidVideo_id"),vimeoConnectorProperties.getProperty("editComment_id"),vimeoConnectorProperties.getProperty("editText"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 404);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }


@Test(groups = { "wso2.esb" }, description = "vimeo{editVideoMetadata} integration test.")
	 public void testEditVideoMetadataWithMandatoryParameters() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "videos/esb_editVideoMetadata.txt";
        String methodName = "vimeo_editVideoMetadata";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"videos/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("editVideo_id"),vimeoConnectorProperties.getProperty("name"),vimeoConnectorProperties.getProperty("description"),vimeoConnectorProperties.getProperty("privacy.view"),vimeoConnectorProperties.getProperty("privacy.embed"),vimeoConnectorProperties.getProperty("review_link"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 200);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }

@Test(groups = { "wso2.esb" }, description = "vimeo{editVideoMetadata} integration test.")
	 public void testEditVideoMetadataWithMandatoryParametersNegativeCase() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "videos/esb_editVideoMetadata.txt";
        String methodName = "vimeo_editVideoMetadata";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"videos/" + methodName + ".xml";
	String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("invalidVideo_id"),vimeoConnectorProperties.getProperty("name"),vimeoConnectorProperties.getProperty("description"),vimeoConnectorProperties.getProperty("privacy.view"),vimeoConnectorProperties.getProperty("privacy.embed"),vimeoConnectorProperties.getProperty("review_link"));
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 404);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }
*/
/*
@Test(groups = { "wso2.esb" }, description = "vimeo{deleteComment} integration test.")
	 public void testDeleteCommentWithMandatoryParameters() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "videos/esb_deleteComment.txt";
        String methodName = "vimeo_deleteComment";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"videos/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("video_id"),vimeoConnectorProperties.getProperty("deleteComment_id"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 204);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }

@Test(groups = { "wso2.esb" }, description = "vimeo{deleteComment} integration test.")
	 public void testDeleteCommentWithMandatoryParametersNegativeCase() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "videos/esb_deleteComment.txt";
        String methodName = "vimeo_deleteComment";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"videos/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("video_id"),vimeoConnectorProperties.getProperty("invalidComment_id"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 400);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }

*/
/*
@Test(groups = { "wso2.esb" }, description = "vimeo{deleteVideo} integration test.")
	 public void testDeleteVideoWithMandatoryParameters() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "videos/esb_deleteVideo.txt";
        String methodName = "vimeo_deleteVideo";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"videos/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("deleteVideo_id"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 204);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }

@Test(groups = { "wso2.esb" }, description = "vimeo{deleteVideo} integration test.")
	 public void testDeleteVideoWithMandatoryParametersNegativeCase() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "videos/esb_deleteVideo.txt";
        String methodName = "vimeo_deleteVideo";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"videos/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("invalidVideo_id"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 404);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }
*/

@Test(groups = { "wso2.esb" }, description = "vimeo{getRelatedVideos} integration test.")
	 public void testGetRelatedVideosWithMandatoryParameters() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "videos/esb_getRelatedVideos.txt";
        String methodName = "vimeo_getRelatedVideos";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"videos/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("video_id"),vimeoConnectorProperties.getProperty("videosFilter"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 200);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }

@Test(groups = { "wso2.esb" }, description = "vimeo{getRelatedVideos} integration test.")
	 public void testGetRelatedVideosWithMandatoryParametersNegativeCase() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "videos/esb_getRelatedVideos.txt";
        String methodName = "vimeo_getRelatedVideos";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"videos/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("invalidVideo_id"),vimeoConnectorProperties.getProperty("videosFilter"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 404);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }

@Test(groups = { "wso2.esb" }, description = "vimeo{getRelatedVideos} integration test.")
    public void testGetRelatedVideosWithPageOptionalParameter() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "videos/esb_getRelatedVideosOptionalPage.txt";
        String methodName = "vimeo_getRelatedVideos";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"videos/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("video_id"),vimeoConnectorProperties.getProperty("videosFilter"),vimeoConnectorProperties.getProperty("page"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 200);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }


@Test(groups = { "wso2.esb" }, description = "vimeo{getRelatedVideos} integration test with negative parameters.")
    public void testGetRelatedVideosWithPageOptionalParameterNegativeCase() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "videos/esb_getRelatedVideosOptionalPage.txt";
        String methodName = "vimeo_getRelatedVideos";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"videos/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("video_id"),vimeoConnectorProperties.getProperty("videosFilter"),vimeoConnectorProperties.getProperty("invalidPage"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 400);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }



@Test(groups = { "wso2.esb" }, description = "vimeo{getRelatedVideos} integration test.")
    public void testGetRelatedVideosWithPerPageOptionalParameter() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "videos/esb_getRelatedVideosOptionalPerPage.txt";
        String methodName = "vimeo_getRelatedVideos";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"videos/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("video_id"),vimeoConnectorProperties.getProperty("videosFilter"),vimeoConnectorProperties.getProperty("per_page"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 200);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }


@Test(groups = { "wso2.esb" }, description = "vimeo{getRelatedVideos} integration test with negative parameters.")
    public void testGetRelatedVideosWithPerPageOptionalParameterNegativeCase() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "videos/esb_getRelatedVideosOptionalPerPage.txt";
        String methodName = "vimeo_getRelatedVideos";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"videos/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("video_id"),vimeoConnectorProperties.getProperty("videosFilter"),vimeoConnectorProperties.getProperty("invalidPer_page"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 500);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }


@Test(groups = { "wso2.esb" }, description = "vimeo{getTagOnVideo} integration test.")
	 public void testGetTagOnVideoWithMandatoryParameters() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "videos/esb_getTagOnVideo.txt";
        String methodName = "vimeo_getTagOnVideo";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"videos/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("video_id"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 200);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }

@Test(groups = { "wso2.esb" }, description = "vimeo{getTagOnVideo} integration test.")
	 public void testGetTagOnVideoWithMandatoryParametersNegativeCase() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "videos/esb_getTagOnVideo.txt";
        String methodName = "vimeo_getTagOnVideo";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"videos/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("invalidVideo_id"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 404);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }




@Test(groups = { "wso2.esb" }, description = "vimeo{getReplyOfComments} integration test.")
    public void testGetReplyOfCommentsWithMandatoryParameters() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "videos/esb_getReplyOfCommentsMandatory.txt";
        String methodName = "vimeo_getReplyOfComments";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"videos/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("replyVideo_id"),vimeoConnectorProperties.getProperty("replyComment_id"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 200);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }


@Test(groups = { "wso2.esb" }, description = "vimeo{getReplyOfComments} integration test with negative parameters.")
    public void testGetReplyOfCommentsWithMandatoryParametersNegativeCase() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "videos/esb_getReplyOfCommentsMandatory.txt";
        String methodName = "vimeo_getReplyOfComments";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"videos/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("replyVideo_id"),vimeoConnectorProperties.getProperty("invalidComment_id"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 400);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }

@Test(groups = { "wso2.esb" }, description = "vimeo{getReplyOfComments} integration test.")
    public void testGetReplyOfCommentsWithOptionalParameters() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "videos/esb_getReplyOfCommentsOptional.txt";
        String methodName = "vimeo_getReplyOfComments";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"videos/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("replyVideo_id"),vimeoConnectorProperties.getProperty("replyComment_id"),vimeoConnectorProperties.getProperty("page"),vimeoConnectorProperties.getProperty("per_page"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 200);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }

@Test(groups = { "wso2.esb" }, description = "vimeo{getReplyOfComments} integration test.")
    public void testGetReplyOfCommentsWithPageOptionalParameter() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "videos/esb_getReplyOfCommentsOptionalPage.txt";
        String methodName = "vimeo_getReplyOfComments";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"videos/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("replyVideo_id"),vimeoConnectorProperties.getProperty("replyComment_id"),vimeoConnectorProperties.getProperty("page"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 200);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }


@Test(groups = { "wso2.esb" }, description = "vimeo{getReplyOfComments} integration test with negative parameters.")
    public void testGetReplyOfCommentsWithPageOptionalParameterNegativeCase() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "videos/esb_getReplyOfCommentsOptionalPage.txt";
        String methodName = "vimeo_getReplyOfComments";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"videos/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("replyVideo_id"),vimeoConnectorProperties.getProperty("replyComment_id"),vimeoConnectorProperties.getProperty("invalidPage"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 400);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }




@Test(groups = { "wso2.esb" }, description = "vimeo{getReplyOfComments} integration test.")
    public void testGetReplyOfCommentsWithPerPageOptionalParameter() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "videos/esb_getReplyOfCommentsOptionalPerPage.txt";
        String methodName = "vimeo_getReplyOfComments";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"videos/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("replyVideo_id"),vimeoConnectorProperties.getProperty("replyComment_id"),vimeoConnectorProperties.getProperty("per_page"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 200);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }


@Test(groups = { "wso2.esb" }, description = "vimeo{getReplyOfComments} integration test with negative parameters.")
    public void testGetMyReplyOfCommentsWithPerPageOptionalParameterNegativeCase() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "videos/esb_getReplyOfCommentsOptionalPerPage.txt";
        String methodName = "vimeo_getReplyOfComments";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"videos/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("replyVideo_id"),vimeoConnectorProperties.getProperty("replyComment_id"),vimeoConnectorProperties.getProperty("invalidPer_page"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 500);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }


@Test(groups = { "wso2.esb" }, description = "vimeo{getUsersLikedTheVideo} integration test.")
	 public void testGetUsersLikedTheVideoWithMandatoryParameters() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "videos/esb_getUsersLikedTheVideoMandatory.txt";
        String methodName = "vimeo_getUsersLikedTheVideo";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"videos/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("myVideo_id"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 200);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }

    }



@Test(groups = { "wso2.esb" }, description = "vimeo{getUsersLikedTheVideo} integration test.")
    public void testGetUsersLikedTheVideoWithOptionalParameters() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "videos/esb_getUsersLikedTheVideoOptional.txt";
        String methodName = "vimeo_getUsersLikedTheVideo";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"videos/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("myVideo_id"),vimeoConnectorProperties.getProperty("page"),vimeoConnectorProperties.getProperty("per_page"),vimeoConnectorProperties.getProperty("query"),vimeoConnectorProperties.getProperty("meSort"),vimeoConnectorProperties.getProperty("direction"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 500);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }


@Test(groups = { "wso2.esb" }, description = "vimeo{getUsersLikedTheVideo} integration test.")
    public void testGetUsersLikedTheVideoWithPageOptionalParameter() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "videos/esb_getUsersLikedTheVideoOptionalPage.txt";
        String methodName = "vimeo_getUsersLikedTheVideo";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"videos/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("myVideo_id"),vimeoConnectorProperties.getProperty("page"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 200);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }



@Test(groups = { "wso2.esb" }, description = "vimeo{getUsersLikedTheVideo} integration test with negative parameters.")
    public void testGetUsersLikedTheVideoWithPageOptionalParameterNegativeCase() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "videos/esb_getUsersLikedTheVideoOptionalPage.txt";
        String methodName = "vimeo_getUsersLikedTheVideo";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"videos/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("myVideo_id"),vimeoConnectorProperties.getProperty("invalidPage"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 400);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }




@Test(groups = { "wso2.esb" }, description = "vimeo{getUsersLikedTheVideo} integration test.")
    public void testGetUsersLikedTheVideoWithPerPageOptionalParameter() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "videos/esb_getUsersLikedTheVideoOptionalPerPage.txt";
        String methodName = "vimeo_getUsersLikedTheVideo";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"videos/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("myVideo_id"),vimeoConnectorProperties.getProperty("per_page"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 200);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }


@Test(groups = { "wso2.esb" }, description = "vimeo{getUsersLikedTheVideo} integration test with negative parameters.")
    public void testGetUsersLikedTheVideoWithPerPageOptionalParameterNegativeCase() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "videos/esb_getUsersLikedTheVideoOptionalPerPage.txt";
        String methodName = "vimeo_getUsersLikedTheVideo";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"videos/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("myVideo_id"),vimeoConnectorProperties.getProperty("invalidPer_page"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 500);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }



@Test(groups = { "wso2.esb" }, description = "vimeo{getUsersLikedTheVideo} integration test.")
    public void testGetUsersLikedTheVideoWithQueryOptionalParameter() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "videos/esb_getUsersLikedTheVideoOptionalQuery.txt";
        String methodName = "vimeo_getUsersLikedTheVideo";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"videos/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("myVideo_id"),vimeoConnectorProperties.getProperty("query"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 200);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }


@Test(groups = { "wso2.esb" }, description = "vimeo{getUsersLikedTheVideo} integration test with negative parameters.")
    public void testGetUsersLikedTheVideoWithQueryOptionalParameterNegativeCase() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "videos/esb_getUsersLikedTheVideoOptionalQuery.txt";
        String methodName = "vimeo_getUsersLikedTheVideo";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"videos/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("myVideo_id"),vimeoConnectorProperties.getProperty("invalidQuery"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 200);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }



@Test(groups = { "wso2.esb" }, description = "vimeo{getUsersLikedTheVideo} integration test.")
    public void testGetUsersLikedTheVideoWithSortOptionalParameter() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "videos/esb_getUsersLikedTheVideoOptionalSort.txt";
        String methodName = "vimeo_getUsersLikedTheVideo";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"videos/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("myVideo_id"),vimeoConnectorProperties.getProperty("meSort"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 500);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }



@Test(groups = { "wso2.esb" }, description = "vimeo{getUsersLikedTheVideo} integration test with negative parameters.")
    public void testGetUsersLikedTheVideoWithSortOptionalParameterNegativeCase() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "videos/esb_getUsersLikedTheVideoOptionalSort.txt";
        String methodName = "vimeo_getUsersLikedTheVideo";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"videos/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("myVideo_id"),vimeoConnectorProperties.getProperty("invalidSort"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 400);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }

@Test(groups = { "wso2.esb" }, description = "vimeo{getUsersLikedTheVideo} integration test.")
    public void testGetUsersLikedTheVideoWithDirectionOptionalParameter() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "videos/esb_getUsersLikedTheVideoOptionalDirection.txt";
        String methodName = "vimeo_getUsersLikedTheVideo";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"videos/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("myVideo_id"),vimeoConnectorProperties.getProperty("direction"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 200);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }


@Test(groups = { "wso2.esb" }, description = "vimeo{getUsersLikedTheVideo} integration test with negative parameters.")
    public void testGetUsersLikedTheVideoWithDirectionOptionalParameterNegativeCase() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "videos/esb_getUsersLikedTheVideoOptionalDirection.txt";
        String methodName = "vimeo_getUsersLikedTheVideo";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"videos/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("myVideo_id"),vimeoConnectorProperties.getProperty("invalidDirection"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 400);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }

@Test(groups = { "wso2.esb" }, description = "vimeo{getComments} integration test.")
	 public void testGetCommentsWithMandatoryParameters() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "videos/esb_getCommentsMandatory.txt";
        String methodName = "vimeo_getComments";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"videos/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("video_id"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 200);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }

@Test(groups = { "wso2.esb" }, description = "vimeo{getComments} integration test.")
	 public void testgetCommentsWithMandatoryParametersNegativeCase() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "videos/esb_getCommentsMandatory.txt";
        String methodName = "vimeo_getComments";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"videos/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("invalidVideo_id"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 404);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }



@Test(groups = { "wso2.esb" }, description = "vimeo{getComments} integration test.")
    public void testGetCommentsWithOptionalParameters() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "videos/esb_getCommentsOptional.txt";
        String methodName = "vimeo_getComments";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"videos/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("video_id"),vimeoConnectorProperties.getProperty("page"),vimeoConnectorProperties.getProperty("per_page"),vimeoConnectorProperties.getProperty("query"),vimeoConnectorProperties.getProperty("meSort"),vimeoConnectorProperties.getProperty("direction"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 500);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }


@Test(groups = { "wso2.esb" }, description = "vimeo{getComments} integration test.")
    public void testGetCommentsWithPageOptionalParameter() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "videos/esb_getCommentsOptionalPage.txt";
        String methodName = "vimeo_getComments";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"videos/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("video_id"),vimeoConnectorProperties.getProperty("page"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 200);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }


@Test(groups = { "wso2.esb" }, description = "vimeo{getComments} integration test with negative parameters.")
    public void testGetCommentsWithPageOptionalParameterNegativeCase() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "videos/esb_getCommentsOptionalPage.txt";
        String methodName = "vimeo_getComments";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"videos/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("video_id"),vimeoConnectorProperties.getProperty("invalidPage"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 400);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }


@Test(groups = { "wso2.esb" }, description = "vimeo{getComments} integration test.")
    public void testGetCommentsWithPerPageOptionalParameter() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "videos/esb_getCommentsOptionalPerPage.txt";
        String methodName = "vimeo_getComments";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"videos/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("video_id"),vimeoConnectorProperties.getProperty("per_page"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 200);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }


@Test(groups = { "wso2.esb" }, description = "vimeo{getComments} integration test with negative parameters.")
    public void testGetCommentsWithPerPageOptionalParameterNegativeCase() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "videos/esb_getCommentsOptionalPerPage.txt";
        String methodName = "vimeo_getComments";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"videos/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("video_id"),vimeoConnectorProperties.getProperty("invalidPer_page"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 500);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }



@Test(groups = { "wso2.esb" }, description = "vimeo{getComments} integration test.")
    public void testGetCommentsWithQueryOptionalParameter() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "videos/esb_getCommentsOptionalQuery.txt";
        String methodName = "vimeo_getComments";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"videos/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("video_id"),vimeoConnectorProperties.getProperty("query"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 200);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }

@Test(groups = { "wso2.esb" }, description = "vimeo{getComments} integration test with negative parameters.")
    public void testGetCommentsWithQueryOptionalParameterNegativeCase() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "videos/esb_getCommentsOptionalQuery.txt";
        String methodName = "vimeo_getComments";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"videos/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("video_id"),vimeoConnectorProperties.getProperty("invalidQuery"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 200);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }

@Test(groups = { "wso2.esb" }, description = "vimeo{getComments} integration test.")
    public void testGetCommentsWithSortOptionalParameter() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "videos/esb_getCommentsOptionalSort.txt";
        String methodName = "vimeo_getComments";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"videos/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("video_id"),vimeoConnectorProperties.getProperty("meSort"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 500);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }

@Test(groups = { "wso2.esb" }, description = "vimeo{getComments} integration test with negative parameters.")
    public void testGetCommentsWithSortOptionalParameterNegativeCase() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "videos/esb_getCommentsOptionalSort.txt";
        String methodName = "vimeo_getComments";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"videos/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("video_id"),vimeoConnectorProperties.getProperty("invalidSort"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 400);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }

@Test(groups = { "wso2.esb" }, description = "vimeo{getComments} integration test.")
    public void testGetCommentsWithDirectionOptionalParameter() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "videos/esb_getCommentsOptionalDirection.txt";
        String methodName = "vimeo_getComments";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"videos/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("video_id"),vimeoConnectorProperties.getProperty("direction"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 200);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }


@Test(groups = { "wso2.esb" }, description = "vimeo{getComments} integration test with negative parameters.")
    public void testGetCommentsWithDirectionOptionalParameterNegativeCase() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "videos/esb_getCommentsOptionalDirection.txt";
        String methodName = "vimeo_getComments";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"videos/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("video_id"),vimeoConnectorProperties.getProperty("invalidDirection"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 400);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }


@Test(groups = { "wso2.esb" }, description = "vimeo{searchVideo} integration test.")
	 public void testSearchVideoWithMandatoryParameters() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "videos/esb_searchVideo.txt";
        String methodName = "vimeo_searchVideo";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"videos/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("query"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 200);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }
@Test(groups = { "wso2.esb" }, description = "vimeo{searchVideo} integration test.")
    public void testSearchVideoWithOptionalParameters() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "videos/esb_searchVideoOptional.txt";
        String methodName = "vimeo_searchVideo";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"videos/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("query"),vimeoConnectorProperties.getProperty("page"),vimeoConnectorProperties.getProperty("per_page"),vimeoConnectorProperties.getProperty("videosSort"),vimeoConnectorProperties.getProperty("direction"),vimeoConnectorProperties.getProperty("searchVideoFilter"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 200);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }


@Test(groups = { "wso2.esb" }, description = "vimeo{searchVideo} integration test.")
    public void testSearchVideoWithPageOptionalParameter() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "videos/esb_searchVideoOptionalPage.txt";
        String methodName = "vimeo_searchVideo";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"videos/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("query"),vimeoConnectorProperties.getProperty("page"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 200);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }



@Test(groups = { "wso2.esb" }, description = "vimeo{searchVideo} integration test with negative parameters.")
    public void testSearchVideoWithPageOptionalParameterNegativeCase() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "videos/esb_searchVideoOptionalPage.txt";
        String methodName = "vimeo_searchVideo";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"videos/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("query"),vimeoConnectorProperties.getProperty("invalidPage"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 400);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }




@Test(groups = { "wso2.esb" }, description = "vimeo{searchVideo} integration test.")
    public void testSearchVideoWithPerPageOptionalParameter() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "videos/esb_searchVideoOptionalPerPage.txt";
        String methodName = "vimeo_searchVideo";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"videos/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("query"),vimeoConnectorProperties.getProperty("per_page"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 200);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }


@Test(groups = { "wso2.esb" }, description = "vimeo{searchVideo} integration test with negative parameters.")
    public void testSearchVideoWithPerPageOptionalParameterNegativeCase() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "videos/esb_searchVideoOptionalPerPage.txt";
        String methodName = "vimeo_searchVideo";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"videos/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("query"),vimeoConnectorProperties.getProperty("invalidPer_page"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 500);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }


@Test(groups = { "wso2.esb" }, description = "vimeo{searchVideo} integration test.")
    public void testSearchVideoWithSortOptionalParameter() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "videos/esb_searchVideoOptionalSort.txt";
        String methodName = "vimeo_searchVideo";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"videos/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("query"),vimeoConnectorProperties.getProperty("videosSort"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 200);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }



@Test(groups = { "wso2.esb" }, description = "vimeo{searchVideo} integration test with negative parameters.")
    public void testsearchVideoWithSortOptionalParameterNegativeCase() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "videos/esb_searchVideoOptionalSort.txt";
        String methodName = "vimeo_searchVideo";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"videos/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("query"),vimeoConnectorProperties.getProperty("invalidSort"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 400);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }

@Test(groups = { "wso2.esb" }, description = "vimeo{searchVideo} integration test.")
    public void testSearchVideoWithDirectionOptionalParameter() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "videos/esb_searchVideoOptionalDirection.txt";
        String methodName = "vimeo_searchVideo";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"videos/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("query"),vimeoConnectorProperties.getProperty("direction"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 200);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }


@Test(groups = { "wso2.esb" }, description = "vimeo{searchVideo} integration test with negative parameters.")
    public void testSearchVideoWithDirectionOptionalParameterNegativeCase() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "videos/esb_searchVideoOptionalDirection.txt";
        String methodName = "vimeo_searchVideo";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"videos/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("query"),vimeoConnectorProperties.getProperty("invalidDirection"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 400);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }

@Test(groups = { "wso2.esb" }, description = "vimeo{searchVideo} integration test.")
    public void testSearchVideoWithFilterOptionalParameter() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "videos/esb_searchVideoOptionalFilter.txt";
        String methodName = "vimeo_searchVideo";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"videos/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("query"),vimeoConnectorProperties.getProperty("searchVideoFilter"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 200);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }

@Test(groups = { "wso2.esb" }, description = "vimeo{searchVideo} integration test with negative parameters.")
    public void testSearchVideoWithFilterOptionalParameterNegativeCase() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "videos/esb_searchVideoOptionalFilter.txt";
        String methodName = "vimeo_searchVideo";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"videos/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("query"),vimeoConnectorProperties.getProperty("invalidFilter"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 200);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }



@Test(groups = { "wso2.esb" }, description = "vimeo{getVideo} integration test.")
	 public void testGetVideoWithMandatoryParameters() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "videos/esb_getVideo.txt";
        String methodName = "vimeo_getVideo";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"videos/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("video_id"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 200);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }

@Test(groups = { "wso2.esb" }, description = "vimeo{getVideo} integration test.")
	 public void testGetVideoWithMandatoryParametersNegativeCase() throws Exception {
    
        String jsonRequestFilePath = pathToRequestsDirectory + "videos/esb_getVideo.txt";
        String methodName = "vimeo_getVideo";
        
        final String jsonString = ConnectorIntegrationUtil.getFileContent(jsonRequestFilePath);
        final String proxyFilePath = "file:///" + pathToProxiesDirectory+"videos/" + methodName + ".xml";
        String modifiedJsonString = String.format(jsonString, vimeoConnectorProperties.getProperty("accessToken"),vimeoConnectorProperties.getProperty("invalidVideo_id"));
        
        proxyAdmin.addProxyService(new DataHandler(new URL(proxyFilePath)));
        
        try {
            int responseHeader = ConnectorIntegrationUtil.sendRequestToRetriveHeaders(getProxyServiceURL(methodName), modifiedJsonString);
            Assert.assertTrue(responseHeader == 404);
        } finally {
            proxyAdmin.deleteProxy(methodName);
        }
    }
}
