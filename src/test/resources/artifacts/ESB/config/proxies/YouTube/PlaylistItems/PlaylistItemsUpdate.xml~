<?xml version="1.0" encoding="UTF-8"?>
<template name="PlaylistItemsUpdate" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="part" description="list of one or more activity resource properties that the API response will include." />

    <parameter name="fields" description="specifying which fields to include in a partial response." />

    <parameter name="optionalParameters"
               description="Concatination of optional parameters" />

    <parameter name="id"  />
    <parameter name="playlistId"  />
    <parameter name="resourceId"  />
    <parameter name="position"  />
    <parameter name="note"  />
    <parameter name="startAt"  />
    <parameter name="endAt"  />



    <sequence>

        <property name="uri.var.part" expression="$func:part" />

        <property name="uri.var.fields" expression="$func:fields" />

        <property name="uri.var.id" expression="$func:id" />
        <property name="uri.var.playlistId" expression="$func:playlistId" />
        <property name="uri.var.resourceId" expression="$func:kind" />
        <property name="uri.var.resourceId" expression="$func:videoId" />
        <property name="uri.var.position" expression="$func:position" />
        <property name="uri.var.note" expression="$func:note" />
        <property name="uri.var.startAt" expression="$func:startAt" />
        <property name="uri.var.endAt" expression="$func:endAt" />

        <property name="uri.var.contentDetails" expression="$func:contentDetails" />


        <payloadFactory media-type="json">
            <fromate>
                {
                    "id":"$1",
                    "snippet":
                    {
                        "playlistId":"$2",
                        "resourceId":
                        {
                            "kind":"$3",
                            "videoId":"$4"
                        },
                        "position":"$5"
                    }
                    "contentDetails":
                    {
                        "note":"$6",
                        "startAt":"$7",
                        "endAt":"$8"
                    }
                }
            </fromate>
            <args>
                <arg expression="get-property('uri.var.id')"/>
                <arg expression="get-property('uri.var.playlistId')"/>
                <arg expression="get-property('uri.var.kind')"/>
                <arg expression="get-property('uri.var.videoId')"/>
                <arg expression="get-property('uri.var.position')"/>
                <arg expression="get-property('uri.var.note')"/>
                <arg expression="get-property('uri.var.startAt')"/>
                <arg expression="get-property('uri.var.endAt')"/>
            </args>
        </payloadFactory>
        <filter
                xpath="get-property('uri.var.position') = '' or (not(string(get-property('uri.var.position'))))">
            <then>
                <script language="js"><![CDATA[
					    var payload = mc.getPayloadJSON();
                        delete payload.snippet.position;
						mc.setPayloadJSON(payload);
					]]>
                </script>
            </then>
        </filter>

        <filter
                xpath="get-property('uri.var.note') = '' or (not(string(get-property('uri.var.note'))))">
            <then>
                <script language="js"><![CDATA[
					    var payload = mc.getPayloadJSON();
						delete payload.contentDetails.note;
						mc.setPayloadJSON(payload);
					]]>
                </script>
            </then>
        </filter>
        <filter
                xpath="get-property('uri.var.startAt') = '' or (not(string(get-property('uri.var.startAt'))))">
            <then>
                <script language="js"><![CDATA[
					    var payload = mc.getPayloadJSON();
						delete payload.contentDetails.startAt;
						mc.setPayloadJSON(payload);
					]]>
                </script>
            </then>
        </filter>
        <filter
                xpath="get-property('uri.var.endAt') = '' or (not(string(get-property('uri.var.endAt'))))">
            <then>
                <script language="js"><![CDATA[
					    var payload = mc.getPayloadJSON();
						delete payload.contentDetails.endAt;
						mc.setPayloadJSON(payload);
					]]>
                </script>
            </then>
        </filter>
        <filter
                xpath="get-property('uri.var.contentDetails') = '' or (not(string(get-property('uri.var.contentDetails'))))">
            <then>
                <script language="js"><![CDATA[
					    var payload = mc.getPayloadJSON();
						delete payload.contentDetails;
						mc.setPayloadJSON(payload);
					]]>
                </script>
            </then>
        </filter>

        <property name="parameters" value=""/>

        <filter
                xpath="get-property('uri.var.fields') = '' or  not(string(get-property('uri.var.fields')))" >
            <then>
                <property name="uri.var.fields" value=""/>
            </then>
            <else>
                <property name="parameters" expression="fn:concat(get-property('parameters'),
                '&amp;fields=', get-property('uri.var.fields'))"/>
            </else>
        </filter>

        <property name="uri.var.optionalParameters" expression="get-property('parameters')" />

        <call>
            <endpoint>
                <http method="PUT"
                      uri-template="{uri.var.apiUrl}/channelSections?part={uri.var.part}{uri.var.optionalParameters}" />
            </endpoint>
        </call>
    </sequence>
</template>