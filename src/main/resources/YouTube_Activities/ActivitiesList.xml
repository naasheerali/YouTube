<?xml version="1.0" encoding="UTF-8"?>
<!--
~  Licensed to the Apache Software Foundation (ASF) under one
~  or more contributor license agreements.  See the NOTICE file
~  distributed with this work for additional information
~  regarding copyright ownership.  The ASF licenses this file
~  to you under the Apache License, Version 2.0 (the
~  "License"); you may not use this file except in compliance
~  with the License.  You may obtain a copy of the License at
~
~   http://www.apache.org/licenses/LICENSE-2.0
~
~  Unless required by applicable law or agreed to in writing,
~  software distributed under the License is distributed on an
~   * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~  KIND, either express or implied.  See the License for the
~  specific language governing permissions and limitations
~  under the License.
-->
<template name="ActivitiesList" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="part"
               description="List of one or more activity resource properties that the API response will include."/>

    <parameter name="channelId" description="A unique YouTube channel ID."/>
    <parameter name="home"
               description="The activity feed that displays on the YouTube home page for the currently authenticated user."/>
    <parameter name="mine" description="A feed of the authenticated user's activities."/>

    <parameter name="filter" description="One of the filter parameters."/>

    <parameter name="maxResults" description="The maximum number of items that should be returned in the result set."/>
    <parameter name="pageToken" description="A specific page in the result set that should be returned. "/>
    <parameter name="publishedAfter"
               description="The earliest date and time that an activity could have occurred for that activity to be included in the API response."/>
    <parameter name="publishedBefore"
               description="The date and time before which an activity must have occurred for that activity to be included in the API response."/>
    <parameter name="regionCode" description="Instructs the API to return results for the specified country."/>

    <parameter name="fields" description="Specifying which fields to include in a partial response."/>

    <parameter name="optionalParameters"
               description="Concatination of optional parameters"/>

    <sequence>
        <property name="uri.var.part" expression="$func:part"/>

        <property name="uri.var.channelId" expression="$func:channelId"/>
        <property name="uri.var.home" expression="$func:home"/>
        <property name="uri.var.mine" expression="$func:mine"/>

        <property name="filters" value=""/>

        <property name="uri.var.maxResults" expression="$func:maxResults"/>
        <property name="uri.var.pageToken" expression="$func:pageToken"/>
        <property name="uri.var.publishedAfter" expression="$func:publishedAfter"/>
        <property name="uri.var.publishedBefore" expression="$func:publishedBefore"/>
        <property name="uri.var.regionCode" expression="$func:regionCode"/>

        <property name="uri.var.fields" expression="$func:fields"/>

        <property name="parameters" value=""/>


        <filter
                xpath="get-property('uri.var.channelId') = '' or  not(string(get-property('uri.var.channelId')))">
            <then>
                <property name="uri.var.channelId" value=""/>
            </then>
            <else>
                <property name="filters" expression="fn:concat(get-property('filters'),
                '&amp;channelId=', get-property('uri.var.channelId'))"/>
            </else>
        </filter>
        <filter
                xpath="get-property('uri.var.home') = '' or  not(string(get-property('uri.var.home')))">
            <then>
                <property name="uri.var.home" value=""/>
            </then>
            <else>
                <property name="filters" expression="fn:concat(get-property('filters'),
                '&amp;home=', get-property('uri.var.home'))"/>
            </else>
        </filter>
        <filter
                xpath="get-property('uri.var.mine') = '' or  not(string(get-property('uri.var.mine')))">
            <then>
                <property name="uri.var.mine" value=""/>
            </then>
            <else>
                <property name="filters" expression="fn:concat(get-property('filters'),
                '&amp;mine=', get-property('uri.var.mine'))"/>
            </else>
        </filter>

        <property name="uri.var.filter" expression="get-property('filters')"/>

        <filter
                xpath="get-property('uri.var.maxResults') = '' or  not(string(get-property('uri.var.maxResults')))">
            <then>
                <property name="uri.var.maxResults" value=""/>
            </then>
            <else>
                <property name="parameters" expression="fn:concat(get-property('parameters'),
                '&amp;maxResults=', get-property('uri.var.maxResults'))"/>
            </else>
        </filter>
        <filter
                xpath="get-property('uri.var.pageToken') = '' or  not(string(get-property('uri.var.pageToken')))">
            <then>
                <property name="uri.var.pageToken" value=""/>
            </then>
            <else>
                <property name="parameters" expression="fn:concat(get-property('parameters'),
                '&amp;pageToken=', get-property('uri.var.pageToken'))"/>
            </else>
        </filter>
        <filter
                xpath="get-property('uri.var.publishedAfter') = '' or  not(string(get-property('uri.var.publishedAfter')))">
            <then>
                <property name="uri.var.publishedAfter" value=""/>
            </then>
            <else>
                <property name="parameters" expression="fn:concat(get-property('parameters'),
                '&amp;publishedAfter=', get-property('uri.var.publishedAfter'))"/>
            </else>
        </filter>
        <filter
                xpath="get-property('uri.var.publishedBefore') = '' or  not(string(get-property('uri.var.publishedBefore')))">
            <then>
                <property name="uri.var.publishedBefore" value=""/>
            </then>
            <else>
                <property name="parameters" expression="fn:concat(get-property('parameters'),
                '&amp;publishedBefore=', get-property('uri.var.publishedBefore'))"/>
            </else>
        </filter>
        <filter
                xpath="get-property('uri.var.regionCode') = '' or  not(string(get-property('uri.var.regionCode')))">
            <then>
                <property name="uri.var.regionCode" value=""/>
            </then>
            <else>
                <property name="parameters" expression="fn:concat(get-property('parameters'),
                '&amp;regionCode=', get-property('uri.var.regionCode'))"/>
            </else>
        </filter>
        <filter
                xpath="get-property('uri.var.fields') = '' or  not(string(get-property('uri.var.fields')))">
            <then>
                <property name="uri.var.fields" value=""/>
            </then>
            <else>
                <property name="parameters" expression="fn:concat(get-property('parameters'),
                '&amp;fields=', get-property('uri.var.fields'))"/>
            </else>
        </filter>

        <property name="uri.var.optionalParameters" expression="get-property('parameters')"/>

        <call>
            <endpoint>
                <http method="GET"
                      uri-template="{uri.var.apiUrl}/activities?part={uri.var.part}{uri.var.filter}{uri.var.optionalParameters}"/>
            </endpoint>
        </call>
    </sequence>
</template>